{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConfigurationComponent = void 0;\nconst ng_components_1 = require(\"@po-ui/ng-components\");\nconst configuration_messages_1 = require(\"./configuration-messages\");\nconst interfaces_1 = require(\"../utilities/interfaces\");\nconst _constants = require(\"../utilities/constants-angular\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"./configuration-service\");\nconst i2 = require(\"../utilities/utilities\");\nconst i3 = require(\"ngx-electronyzer\");\nconst i4 = require(\"@po-ui/ng-components\");\nconst i5 = require(\"@angular/forms\");\nconst CNST_FIELD_NAMES = [{\n  key: 'logfilesToKeep',\n  value: 'Número mínimo, em dias, de arquivos de log para serem mantidos'\n}];\nlet ConfigurationComponent = /*#__PURE__*/(() => {\n  class ConfigurationComponent {\n    /*************************************************/\n    /*************************************************/\n    /*************************************************/\n    constructor(_configurationService, _utilities, _electronService) {\n      this._configurationService = _configurationService;\n      this._utilities = _utilities;\n      this._electronService = _electronService;\n      this.CNST_MESSAGES = {\n        CONFIG_VALIDATE: 'Validando configuração...'\n      };\n      this.version = '';\n      this.programName = '';\n      this.showQueriesPosition = ng_components_1.PoSwitchLabelPosition.Left;\n      this.configuration = new interfaces_1.Configuration();\n      this.po_lo_text = {\n        value: null\n      };\n      this.programName = _constants.CNST_PROGRAM_NAME.DEFAULT;\n      this._CNST_FIELD_NAMES = CNST_FIELD_NAMES;\n      this.lbl_logfilesToKeep = this._CNST_FIELD_NAMES.find(v => {\n        return v.key == 'logfilesToKeep';\n      }).value;\n    }\n    ngOnInit() {\n      this.po_lo_text = {\n        value: configuration_messages_1.CNST_CONFIGURATION_MESSAGES.CONFIG_LOADING\n      };\n      this._configurationService.getConfiguration().subscribe(conf => {\n        if (conf != undefined) {\n          this.configuration = conf;\n        }\n        if (this._electronService.isElectronApp) {\n          this.version = _constants.CNST_PROGRAM_VERSION.PRODUCTION + this._electronService.ipcRenderer.sendSync('getVersion').version;\n        } else {\n          this.version = _constants.CNST_PROGRAM_VERSION.DEVELOPMENT;\n        }\n        this.po_lo_text = {\n          value: null\n        };\n      }, err => {\n        this._utilities.createNotification(_constants.CNST_LOGLEVEL.ERROR, configuration_messages_1.CNST_CONFIGURATION_MESSAGES.CONFIG_LOADING_ERROR, err);\n        this.po_lo_text = {\n          value: null\n        };\n      });\n    }\n    saveConfiguration() {\n      if (this.validConfiguration()) {\n        this.po_lo_text = {\n          value: configuration_messages_1.CNST_CONFIGURATION_MESSAGES.CONFIG_SAVE\n        };\n        this._configurationService.saveConfiguration(this.configuration).subscribe(b => {\n          this._utilities.createNotification(_constants.CNST_LOGLEVEL.INFO, configuration_messages_1.CNST_CONFIGURATION_MESSAGES.CONFIG_SAVE_OK);\n          this.po_lo_text = {\n            value: null\n          };\n        }, err => {\n          this._utilities.createNotification(_constants.CNST_LOGLEVEL.ERROR, configuration_messages_1.CNST_CONFIGURATION_MESSAGES.CONFIG_SAVE_ERROR);\n          this.po_lo_text = {\n            value: null\n          };\n        });\n      }\n    }\n    validConfiguration() {\n      let valid = true;\n      let configuration = new interfaces_1.Configuration();\n      this._utilities.writeToLog(_constants.CNST_LOGLEVEL.DEBUG, this.CNST_MESSAGES.CONFIG_VALIDATE);\n      this.po_lo_text = {\n        value: this.CNST_MESSAGES.CONFIG_VALIDATE\n      };\n      let propertiesNotDefined = Object.getOwnPropertyNames.call(Object, configuration).map(p => {\n        if (this.configuration[p] == undefined && p != 'id') return p;\n      }).filter(p => {\n        return p != null;\n      });\n      // Validação dos campos de formulário //\n      if (propertiesNotDefined.length > 0) {\n        valid = false;\n        this._utilities.createNotification(_constants.CNST_LOGLEVEL.ERROR, 'Campo obrigatório \"' + this._CNST_FIELD_NAMES.find(f => {\n          return f.key === propertiesNotDefined[0];\n        }).value + '\" não preenchido.');\n        this.po_lo_text = {\n          value: null\n        };\n      }\n      return valid;\n    }\n  }\n  ConfigurationComponent.ɵfac = function ConfigurationComponent_Factory(t) {\n    return new (t || ConfigurationComponent)(i0.ɵɵdirectiveInject(i1.ConfigurationService), i0.ɵɵdirectiveInject(i2.Utilities), i0.ɵɵdirectiveInject(i3.ElectronService));\n  };\n  ConfigurationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigurationComponent,\n    selectors: [[\"app-configuration\"]],\n    decls: 16,\n    vars: 8,\n    consts: [[\"p-title\", \"Configura\\u00E7\\u00E3o do Agent\"], [\"p-screen-lock\", \"true\", 3, \"hidden\", \"p-text\"], [\"configurationForm\", \"ngForm\"], [1, \"po-row\"], [1, \"title\", \"po-sm-12\", \"po-md-12\", \"po-lg-12\", \"po-xl-12\"], [1, \"subtitle\", \"po-sm-12\", \"po-md-12\", \"po-lg-12\", \"po-xl-12\"], [1, \"line\", \"po-sm-12\", \"po-md-12\", \"po-lg-12\", \"po-xl-12\"], [1, \"po-row\", \"fields\"], [\"p-min\", \"1\", \"name\", \"po_logfilesToKeep\", \"p-maxlength\", \"3\", \"p-regex\", \"999\", 1, \"po-sm-12\", \"po-md-12\", \"po-lg-12\", \"po-xl-12\", 3, \"ngModel\", \"p-label\", \"ngModelChange\"], [\"name\", \"po_showQuery\", \"p-label-off\", \"Modo de depura\\u00E7\\u00E3o: Desativado\", \"p-label-on\", \"Modo de depura\\u00E7\\u00E3o: Ativado\", 1, \"subtitle\", \"po-sm-12\", \"po-md-12\", \"po-lg-12\", \"po-xl-12\", 3, \"ngModel\", \"p-label-position\", \"ngModelChange\"], [1, \"po-row\", \"footer\"], [\"p-size\", \"medium\", \"p-label\", \"Salvar\", \"p-kind\", \"primary\", 1, \"removeBorder\", \"padding-0\", \"po-button\", \"po-text-ellipsis\", \"po-button-primary\", 3, \"p-click\"]],\n    template: function ConfigurationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-list\", 0);\n        i0.ɵɵelement(1, \"po-loading-overlay\", 1);\n        i0.ɵɵelementStart(2, \"form\", null, 2)(4, \"div\", 3)(5, \"span\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"hr\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"po-number\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ConfigurationComponent_Template_po_number_ngModelChange_11_listener($event) {\n          return ctx.configuration.logfilesToKeep = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"po-switch\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function ConfigurationComponent_Template_po_switch_ngModelChange_12_listener($event) {\n          return ctx.configuration.debug = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"hr\", 6);\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"po-button\", 11);\n        i0.ɵɵlistener(\"p-click\", function ConfigurationComponent_Template_po_button_p_click_15_listener() {\n          return ctx.saveConfiguration();\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.po_lo_text.value == null)(\"p-text\", ctx.po_lo_text.value);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.programName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Vers\\u00E3o \", ctx.version, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.configuration.logfilesToKeep)(\"p-label\", ctx.lbl_logfilesToKeep);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.configuration.debug)(\"p-label-position\", ctx.showQueriesPosition);\n      }\n    },\n    dependencies: [i4.PoLoadingOverlayComponent, i5.ɵNgNoValidate, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i4.PoButtonComponent, i4.PoNumberComponent, i4.PoSwitchComponent, i4.PoPageListComponent],\n    styles: [\"@media screen and (max-width: 800px){.fields[_ngcontent-%COMP%]{width:40%!important}}.fields[_ngcontent-%COMP%]{width:35%}\"]\n  });\n  return ConfigurationComponent;\n})();\nexports.ConfigurationComponent = ConfigurationComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}