{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataBaseComponent = void 0;\nconst ng_components_1 = require(\"@po-ui/ng-components\");\nconst database_messages_1 = require(\"./database-messages\");\nconst _constants = require(\"../utilities/constants-angular\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"../workspace/workspace-service\");\nconst i2 = require(\"./database-service\");\nconst i3 = require(\"../utilities/utilities\");\nconst i4 = require(\"@angular/router\");\nconst i5 = require(\"@po-ui/ng-components\");\nfunction DataBaseComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"po-info\", 10)(2, \"po-info\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"p-value\", item_r2.driverClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"p-value\", item_r2.driverPath);\n  }\n}\nlet DataBaseComponent = /*#__PURE__*/(() => {\n  class DataBaseComponent {\n    setoptions() {\n      return [{\n        label: 'Editar',\n        action: this.editDatabase.bind(this)\n      }, {\n        label: 'Excluir',\n        action: this.deleteDatabase.bind(this)\n      }];\n    }\n    constructor(_workspaceService, _databaseService, _utilities, _router) {\n      this._workspaceService = _workspaceService;\n      this._databaseService = _databaseService;\n      this._utilities = _utilities;\n      this._router = _router;\n      this.CNST_MESSAGES = {\n        DATABASE_DELETE_ERROR_PROJECTS: 'Não e possível apagar este banco de dados, pois existem projetos atrelados à ele.'\n      };\n      this.po_lo_text = {\n        value: null\n      };\n    }\n    ngOnInit() {\n      this.loadDatabases();\n    }\n    loadDatabases() {\n      this.po_lo_text = {\n        value: database_messages_1.CNST_DATABASE_MESSAGES.DATABASE_LOADING\n      };\n      this._databaseService.getDatabases().subscribe(db => {\n        this.databases = db;\n        this.po_lo_text = {\n          value: null\n        };\n      }, err => {\n        this._utilities.createNotification(_constants.CNST_LOGLEVEL.ERROR, database_messages_1.CNST_DATABASE_MESSAGES.DATABASE_LOADING_ERROR, err);\n        this.po_lo_text = {\n          value: null\n        };\n      });\n    }\n    editDatabase(db) {\n      this._router.navigate(['/database-add'], {\n        state: db\n      });\n    }\n    addDatabase() {\n      this._router.navigate(['/database-add']);\n    }\n    deleteDatabase(db) {\n      this.databaseToDelete = db;\n      this.modal_1.open();\n    }\n    deleteThisDatabase(db) {\n      this.po_lo_text = {\n        value: database_messages_1.CNST_DATABASE_MESSAGES.DATABASE_DELETE(this.databaseToDelete.name)\n      };\n      this._workspaceService.getWorkspacesByDatabase(db).subscribe(w => {\n        if (w.length > 0) {\n          this._utilities.createNotification(_constants.CNST_LOGLEVEL.ERROR, this.CNST_MESSAGES.DATABASE_DELETE_ERROR_PROJECTS);\n          this.po_lo_text = {\n            value: null\n          };\n        } else {\n          this._databaseService.deleteDatabase(db).subscribe(b => {\n            this._utilities.createNotification(_constants.CNST_LOGLEVEL.INFO, database_messages_1.CNST_DATABASE_MESSAGES.DATABASE_DELETE_OK);\n            this.po_lo_text = {\n              value: null\n            };\n            this.loadDatabases();\n          }, err => {\n            this._utilities.createNotification(_constants.CNST_LOGLEVEL.ERROR, database_messages_1.CNST_DATABASE_MESSAGES.DATABASE_DELETE_ERROR(this.databaseToDelete.name), err);\n            this.po_lo_text = {\n              value: null\n            };\n          });\n        }\n      }, err => {\n        this._utilities.createNotification(_constants.CNST_LOGLEVEL.ERROR, database_messages_1.CNST_DATABASE_MESSAGES.DATABASE_DELETE_ERROR(this.databaseToDelete.name), err);\n        this.po_lo_text = {\n          value: null\n        };\n      });\n    }\n    modal_1_confirm() {\n      this.modal_1.close();\n      this.deleteThisDatabase(this.databaseToDelete);\n    }\n    modal_1_close() {\n      this.databaseToDelete = null;\n      this.modal_1.close();\n    }\n  }\n  DataBaseComponent.ɵfac = function DataBaseComponent_Factory(t) {\n    return new (t || DataBaseComponent)(i0.ɵɵdirectiveInject(i1.WorkspaceService), i0.ɵɵdirectiveInject(i2.DatabaseService), i0.ɵɵdirectiveInject(i3.Utilities), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  DataBaseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataBaseComponent,\n    selectors: [[\"app-database\"]],\n    viewQuery: function DataBaseComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(ng_components_1.PoModalComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal_1 = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 6,\n    consts: [[\"p-title\", \"Cadastro de Banco de Dados\"], [1, \"po-row\"], [\"p-label\", \"Adicionar\", \"p-icon\", \"po-icon po-icon-plus\", \"p-kind\", \"primary\", 1, \"padding-button\", 3, \"p-click\"], [\"p-property-title\", \"name\", 3, \"p-items\", \"p-actions\"], [\"p-list-view-content-template\", \"\"], [\"p-screen-lock\", \"true\", 3, \"hidden\", \"p-text\"], [\"p-title\", \"Deseja realmente excluir este Banco de Dados?\", 3, \"p-primary-action\", \"p-secondary-action\"], [\"modal_1\", \"\"], [\"p-label\", \"Fechar\", 3, \"p-click\"], [\"p-label\", \"Confirmar\", \"p-kind\", \"primary\", 3, \"p-click\"], [\"p-label\", \"Driver\", 1, \"po-md-4\", 3, \"p-value\"], [\"p-label\", \"URL\", 1, \"po-md-8\", 3, \"p-value\"]],\n    template: function DataBaseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-list\", 0)(1, \"div\", 1)(2, \"po-button\", 2);\n        i0.ɵɵlistener(\"p-click\", function DataBaseComponent_Template_po_button_p_click_2_listener() {\n          return ctx.addDatabase();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"po-list-view\", 3);\n        i0.ɵɵtemplate(4, DataBaseComponent_ng_template_4_Template, 3, 2, \"ng-template\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"po-loading-overlay\", 5);\n        i0.ɵɵelementStart(6, \"po-modal\", 6, 7)(8, \"po-modal-footer\")(9, \"po-button\", 8);\n        i0.ɵɵlistener(\"p-click\", function DataBaseComponent_Template_po_button_p_click_9_listener() {\n          return ctx.modal_1_close();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"po-button\", 9);\n        i0.ɵɵlistener(\"p-click\", function DataBaseComponent_Template_po_button_p_click_10_listener() {\n          return ctx.modal_1_confirm();\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"p-items\", ctx.databases)(\"p-actions\", ctx.setoptions());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.po_lo_text.value == null)(\"p-text\", ctx.po_lo_text.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"p-primary-action\", ctx.modal_1_confirm)(\"p-secondary-action\", ctx.modal_1_close);\n      }\n    },\n    dependencies: [i5.PoInfoComponent, i5.PoLoadingOverlayComponent, i5.PoModalComponent, i5.PoModalFooterComponent, i5.PoPageListComponent, i5.PoListViewComponent, i5.PoListViewContentTemplateDirective, i5.PoButtonComponent]\n  });\n  return DataBaseComponent;\n})();\nexports.DataBaseComponent = DataBaseComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}