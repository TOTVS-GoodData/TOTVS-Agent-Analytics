{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserService = void 0;\nconst http_1 = require(\"@angular/common/http\");\nconst i0 = require(\"@angular/core\");\nconst i1 = require(\"@angular/common/http\");\nconst i2 = require(\"./session-service\");\nconst i3 = require(\"../utilities/utilities\");\nlet UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, _sessionService, _utilities) {\n      this.http = http;\n      this._sessionService = _sessionService;\n      this._utilities = _utilities;\n      //private baseUrl = 'https://analytics.totvs.com.br';\n      this.baseUrl = '/gooddata/';\n      this.httpOptions = {\n        headers: new http_1.HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8',\n          'Accept': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n          'Access-Control-Allow-Headers': 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type,' + 'Access-Control-Request-Method, Access-Control-Request-Headers'\n        })\n      };\n    }\n    login(user, password) {\n      const loginUrl = `${this.baseUrl}gdc/account/login`;\n      const body = JSON.stringify({\n        postUserLogin: {\n          login: user,\n          password: password,\n          remember: 1,\n          verify_level: 2\n        }\n      });\n      return this.http.post(loginUrl, body, this.httpOptions);\n    }\n    refreshToken() {\n      let headers = this._utilities.getDefaultHeaders();\n      headers = this._utilities.addGoodDataHeaders(headers);\n      //Refresh via headers\n      return this.http.get(`${this.baseUrl}gdc/account/token`, {\n        withCredentials: true,\n        headers: headers,\n        observe: 'response'\n      });\n    }\n    getProjects(profile) {\n      let headers = this._utilities.getDefaultHeaders();\n      headers = this._utilities.addGoodDataHeaders(headers);\n      const projectsUrl = `${this.baseUrl}gdc/account/profile/${profile}/projects`;\n      return this.http.get(projectsUrl, {\n        withCredentials: true,\n        headers: headers,\n        observe: 'response'\n      });\n    }\n    getProcess(idProject) {\n      const processUrl = `${this.baseUrl}/gdc/projects/${idProject}/dataload/processes`;\n      return this.http.get(processUrl);\n    }\n    getGraphs(process) {\n      return this.http.get(process);\n    }\n    getProject(idProject) {\n      const projectUrl = `${this.baseUrl}/gdc/projects/${idProject}`;\n      return this.http.get(projectUrl);\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SessionService), i0.ɵɵinject(i3.Utilities));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n  return UserService;\n})();\nexports.UserService = UserService;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}